{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Husei\\\\aubify\\\\Frontend\\\\src\\\\components\\\\ChangePassword\\\\ChangePassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./ChangePassword.css\";\nimport NavBar from \"../NavBar/NavBar\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport SideBar from \"../SideBar/SideBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChangePassword = () => {\n  _s();\n  const [currentPassword, setCurrentPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [passwordMatch, setPasswordMatch] = useState(true);\n  const [passwordStrong, setPasswordStrong] = useState(false);\n  const [passwordError, setPasswordError] = useState(\"\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Check if confirm password matches new password\n    setPasswordMatch(confirmPassword === newPassword);\n  }, [confirmPassword, newPassword]);\n  const handleCurrentPasswordChange = e => {\n    setCurrentPassword(e.target.value);\n  };\n  const handleNewPasswordChange = e => {\n    setNewPassword(e.target.value);\n    setPasswordError(\"\");\n    setPasswordStrong(isValidPassword(e.target.value));\n  };\n  const handleConfirmPasswordChange = e => {\n    setConfirmPassword(e.target.value);\n    setPasswordError(\"\");\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (currentPassword === \"\") {\n      setPasswordError(\"Please fill in your current password!\");\n      return;\n    }\n\n    // Check if current password matches the one in the database\n    const currentPasswordMatch = await checkCurrentPassword(currentPassword);\n    if (!currentPasswordMatch) {\n      setPasswordError(\"Current password is incorrect.\");\n      return;\n    }\n\n    // Check if confirm password matches new password\n    if (!passwordMatch) {\n      return;\n    }\n\n    // Check if the new password meets strength criteria\n    if (!passwordStrong) {\n      setPasswordError(\"New password must be at least 8 characters long and contain at least one uppercase letter, one number, and one special character.\");\n      return;\n    }\n\n    // Check if current password and new password are the same\n    if (currentPassword === newPassword) {\n      setPasswordError(\"New password cannot be the same as the current password.\");\n      return;\n    }\n\n    // Send the new password to the backend to save it in the database\n    const email = localStorage.getItem(\"userEmail\");\n    await saveNewPassword(email, newPassword);\n    navigate(\"/userprofile\");\n    // Optionally, handle success or failure after saving the new password\n  };\n\n  // Function to check if the current password matches the one in the database\n  const checkCurrentPassword = async password => {\n    try {\n      const email = localStorage.getItem(\"userEmail\");\n      const response = await axios.post(\"/checkCurrentPassword\", {\n        email,\n        password\n      });\n      return response.data.currentPasswordMatch;\n    } catch (error) {\n      console.error(\"Error checking current password:\", error);\n      return false;\n    }\n  };\n\n  // Function to save the new password in the database\n  const saveNewPassword = async (email, newPassword) => {\n    try {\n      await axios.post(\"/saveNewPassword\", {\n        email,\n        newPassword\n      });\n      console.log(\"New password saved successfully.\");\n      // Optionally, handle success or failure after saving the new password\n    } catch (error) {\n      console.error(\"Error saving new password:\", error);\n      // Handle error, such as displaying a generic error message to the user\n    }\n  };\n\n  // Function to validate password strength using regex\n  const isValidPassword = password => {\n    const passwordRegex = /^(?=.*[A-Z])(?=.*\\d)(?=.*[,~!@#$%^&*()[\\]{}:;\"'.,<>?/|])[A-Za-z\\d,~!@#$%^&*()[\\]{}:;\"'.,<>?/|]{8,}$/;\n    return passwordRegex.test(password);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"change-password-page\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"change-password-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"password-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"current-password\",\n            children: \"Current Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"current-password\",\n            name: \"current-password\",\n            value: currentPassword,\n            onChange: handleCurrentPasswordChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"new-password\",\n            children: \"New Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"new-password\",\n            name: \"new-password\",\n            value: newPassword,\n            onChange: handleNewPasswordChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirm-password\",\n            children: \"Confirm Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"confirm-password\",\n            name: \"confirm-password\",\n            value: confirmPassword,\n            onChange: handleConfirmPasswordChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"change-password-button\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), !passwordMatch && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: \"Passwords do not match.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), passwordError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: passwordError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(ChangePassword, \"AOhd9teOdm1G8T2aixf2qm3zJRQ=\", false, function () {\n  return [useNavigate];\n});\n_c = ChangePassword;\nexport default ChangePassword;\nvar _c;\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"names":["React","useState","useEffect","NavBar","axios","useNavigate","SideBar","jsxDEV","_jsxDEV","ChangePassword","_s","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","passwordMatch","setPasswordMatch","passwordStrong","setPasswordStrong","passwordError","setPasswordError","navigate","handleCurrentPasswordChange","e","target","value","handleNewPasswordChange","isValidPassword","handleConfirmPasswordChange","handleSubmit","preventDefault","currentPasswordMatch","checkCurrentPassword","email","localStorage","getItem","saveNewPassword","password","response","post","data","error","console","log","passwordRegex","test","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","name","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Husei/aubify/Frontend/src/components/ChangePassword/ChangePassword.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./ChangePassword.css\";\nimport NavBar from \"../NavBar/NavBar\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport SideBar from \"../SideBar/SideBar\";\n\nconst ChangePassword = () => {\n  const [currentPassword, setCurrentPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [passwordMatch, setPasswordMatch] = useState(true);\n  const [passwordStrong, setPasswordStrong] = useState(false);\n  const [passwordError, setPasswordError] = useState(\"\");\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Check if confirm password matches new password\n    setPasswordMatch(confirmPassword === newPassword);\n  }, [confirmPassword, newPassword]);\n\n  const handleCurrentPasswordChange = (e) => {\n    setCurrentPassword(e.target.value);\n  };\n\n  const handleNewPasswordChange = (e) => {\n    setNewPassword(e.target.value);\n    setPasswordError(\"\");\n    setPasswordStrong(isValidPassword(e.target.value));\n  };\n\n  const handleConfirmPasswordChange = (e) => {\n    setConfirmPassword(e.target.value);\n    setPasswordError(\"\");\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (currentPassword === \"\") {\n      setPasswordError(\"Please fill in your current password!\");\n      return;\n    }\n\n    // Check if current password matches the one in the database\n    const currentPasswordMatch = await checkCurrentPassword(currentPassword);\n\n    if (!currentPasswordMatch) {\n      setPasswordError(\"Current password is incorrect.\");\n      return;\n    }\n\n    // Check if confirm password matches new password\n    if (!passwordMatch) {\n      return;\n    }\n\n    // Check if the new password meets strength criteria\n    if (!passwordStrong) {\n      setPasswordError(\n        \"New password must be at least 8 characters long and contain at least one uppercase letter, one number, and one special character.\"\n      );\n      return;\n    }\n\n    // Check if current password and new password are the same\n    if (currentPassword === newPassword) {\n      setPasswordError(\n        \"New password cannot be the same as the current password.\"\n      );\n      return;\n    }\n\n    // Send the new password to the backend to save it in the database\n    const email = localStorage.getItem(\"userEmail\");\n    await saveNewPassword(email, newPassword);\n    navigate(\"/userprofile\");\n    // Optionally, handle success or failure after saving the new password\n  };\n\n  // Function to check if the current password matches the one in the database\n  const checkCurrentPassword = async (password) => {\n    try {\n      const email = localStorage.getItem(\"userEmail\");\n      const response = await axios.post(\"/checkCurrentPassword\", {\n        email,\n        password,\n      });\n      return response.data.currentPasswordMatch;\n    } catch (error) {\n      console.error(\"Error checking current password:\", error);\n      return false;\n    }\n  };\n\n  // Function to save the new password in the database\n  const saveNewPassword = async (email, newPassword) => {\n    try {\n      await axios.post(\"/saveNewPassword\", { email, newPassword });\n      console.log(\"New password saved successfully.\");\n      // Optionally, handle success or failure after saving the new password\n    } catch (error) {\n      console.error(\"Error saving new password:\", error);\n      // Handle error, such as displaying a generic error message to the user\n    }\n  };\n\n  // Function to validate password strength using regex\n  const isValidPassword = (password) => {\n    const passwordRegex =\n      /^(?=.*[A-Z])(?=.*\\d)(?=.*[,~!@#$%^&*()[\\]{}:;\"'.,<>?/|])[A-Za-z\\d,~!@#$%^&*()[\\]{}:;\"'.,<>?/|]{8,}$/;\n    return passwordRegex.test(password);\n  };\n\n  return (\n    <div className=\"change-password-page\">\n      <NavBar />\n      <SideBar />\n      <div className=\"change-password-container\">\n        <h1>Change Password</h1>\n        <form className=\"password-form\" onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"current-password\">Current Password:</label>\n            <input\n              type=\"password\"\n              id=\"current-password\"\n              name=\"current-password\"\n              value={currentPassword}\n              onChange={handleCurrentPasswordChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"new-password\">New Password:</label>\n            <input\n              type=\"password\"\n              id=\"new-password\"\n              name=\"new-password\"\n              value={newPassword}\n              onChange={handleNewPasswordChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"confirm-password\">Confirm Password:</label>\n            <input\n              type=\"password\"\n              id=\"confirm-password\"\n              name=\"confirm-password\"\n              value={confirmPassword}\n              onChange={handleConfirmPasswordChange}\n            />\n          </div>\n          <button type=\"submit\" className=\"change-password-button\">\n            Submit\n          </button>\n          {!passwordMatch && (\n            <div className=\"error-message\">Passwords do not match.</div>\n          )}\n          {passwordError && (\n            <div className=\"error-message\">{passwordError}</div>\n          )}\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ChangePassword;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}