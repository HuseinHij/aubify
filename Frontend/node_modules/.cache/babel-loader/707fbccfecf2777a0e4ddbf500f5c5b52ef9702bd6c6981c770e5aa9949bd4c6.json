{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Husei\\\\aubify\\\\Frontend\\\\src\\\\components\\\\CommentPage\\\\CommentPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./CommentPage.css\";\nimport upvoteIcon from \"../icons/upvote.png\";\nimport downvoteIcon from \"../icons/downvote.png\";\nimport commentIcon from \"../icons/comment.png\";\nimport shareIcon from \"../icons/share.png\";\nimport reportIcon from \"../icons/report.png\";\nimport deleteIcon from \"../icons/delete-admin.png\";\nimport NavBar from \"../NavBar/NavBar\";\nimport SideBar from \"../SideBar/SideBar\";\nimport { useUser } from \"../../UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentPage = () => {\n  _s();\n  const {\n    postId\n  } = useParams();\n  const [post, setPost] = useState(null);\n  const [newComment, setNewComment] = useState(\"\");\n  const [remainingCharacters, setRemainingCharacters] = useState(250);\n  const [reportMessage, setReportMessage] = useState(\"\");\n  const [reportedPostId, setReportedPostId] = useState(null);\n  const [commentError, setCommentError] = useState(\"\");\n  const navigate = useNavigate();\n  const {\n    isAdmin\n  } = useUser();\n  useEffect(() => {\n    fetchPostAndComments();\n  }, []);\n  useEffect(() => {\n    if (reportedPostId) {\n      const timer = setTimeout(() => {\n        setReportedPostId(null);\n      }, 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [reportedPostId]);\n  const fetchPostAndComments = async () => {\n    try {\n      const response = await axios.get(`/posts/${postId}`);\n      const fetchedPost = {\n        ...response.data,\n        authorAnonymousId: response.data.author.anonymousId\n      };\n      setPost(fetchedPost);\n    } catch (error) {\n      console.error(\"Failed to fetch post:\", error);\n    }\n  };\n  const handleAddComment = async () => {\n    if (newComment.trim() === \"\") {\n      setCommentError(\"Please enter the content for the comment.\");\n      return;\n    }\n    const userEmail = localStorage.getItem(\"userEmail\");\n    if (!userEmail) {\n      console.error(\"User email not found. Please ensure the user is logged in.\");\n      return;\n    }\n    const commentData = {\n      content: newComment,\n      userEmail\n    };\n    try {\n      const response = await axios.post(`/posts/${postId}/comments`, commentData, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (response.status === 201 || response.status === 200) {\n        // Ensure successful response\n        setNewComment(\"\"); // Clear the text field\n        setRemainingCharacters(250); // Reset remaining characters\n        fetchPostAndComments(); // Explicitly refetch post and comments to ensure UI is updated\n      } else {\n        throw new Error(\"Failed to add comment\");\n      }\n    } catch (error) {\n      console.error(\"Failed to add comment:\", error);\n      // Check if the error response indicates a comment limit was reached\n      if (error.response && error.response.status === 429) {\n        setCommentError(\"You have reached your commenting limit for today on this post, please try again later.\");\n      }\n    }\n  };\n  const handleInputChange = event => {\n    const {\n      value\n    } = event.target;\n    const trimmedValue = value.slice(0, 250); // Limit the input to 250 characters\n    setNewComment(trimmedValue);\n    const remaining = Math.max(0, 250 - trimmedValue.length); // Calculate remaining characters\n    setRemainingCharacters(remaining);\n    setCommentError(\"\");\n  };\n\n  // Example function to upvote a comment based on its index within the post's comments array\n  const handleVoteUpvote = async (postId, commentId) => {\n    try {\n      await axios.post(`/posts/${postId}/comments/${commentId}/upvote`, {\n        userEmail: localStorage.getItem(\"userEmail\")\n      });\n      fetchPostAndComments(); // Refresh to show updated vote counts\n    } catch (error) {\n      console.error(`Failed to upvote on comment:`, error);\n    }\n  };\n  const handleVoteDownvote = async (postId, commentId) => {\n    try {\n      await axios.post(`/posts/${postId}/comments/${commentId}/downvote`, {\n        userEmail: localStorage.getItem(\"userEmail\")\n      });\n      fetchPostAndComments(); // Refresh to show updated vote counts\n    } catch (error) {\n      console.error(`Failed to downvote on comment:`, error);\n    }\n  };\n  const handleUpvote = async postId => {\n    const userEmail = localStorage.getItem(\"userEmail\"); // Retrieve the user's email\n    try {\n      await axios.post(`/posts/${postId}/upvote`, {\n        userEmail\n      });\n      fetchPostAndComments(); // Refresh the posts to reflect the new upvote count\n    } catch (error) {\n      console.error(\"Failed to upvote post:\", error);\n    }\n  };\n  const handleDownvote = async postId => {\n    const userEmail = localStorage.getItem(\"userEmail\"); // Retrieve the user's email\n    try {\n      await axios.post(`/posts/${postId}/downvote`, {\n        userEmail\n      });\n      fetchPostAndComments(); // Refresh the posts to reflect the new downvote count\n    } catch (error) {\n      console.error(\"Failed to downvote post:\", error);\n    }\n  };\n  const handleReport = async postId => {\n    try {\n      const userEmail = localStorage.getItem(\"userEmail\");\n      const response = await axios.post(`/posts/${postId}/report`, {\n        userEmail\n      });\n      setReportedPostId(postId);\n      if (response.data.action === \"add\") {\n        setReportMessage(\"You have successfully reported this post!\");\n      } else if (response.data.action === \"remove\") {\n        setReportMessage(\"Report removed!\");\n      }\n    } catch (error) {\n      console.error(\"Failed to toggle report:\", error);\n    }\n  };\n  const handleDeleteAdmin = async postId => {\n    if (!window.confirm(\"Are you sure you want to delete this post?\")) return;\n    try {\n      await axios.delete(`/posts/${postId}`, {\n        data: {\n          userEmail: localStorage.getItem(\"userEmail\")\n        } // Axios requires data to be in a 'data' key for DELETE requests\n      });\n      // Refresh the post list to reflect the deletion\n      navigate(\"/homepage\");\n    } catch (error) {\n      console.error(\"Failed to delete post:\", error);\n    }\n  };\n  const handleShare = postId => {\n    const commentPageLink = `${window.location.origin}/posts/${postId}/share`;\n    navigator.clipboard.writeText(commentPageLink).then(() => alert(\"Link copied to clipboard!\")).catch(error => console.error(\"Failed to copy link:\", error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-page\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-page-container\",\n      children: [post ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-details-comment\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-anonymousId\",\n            children: post.authorAnonymousId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-created-at\",\n            children: new Date(post.createdAt).toLocaleString(\"en-US\", {\n              year: \"numeric\",\n              month: \"numeric\",\n              day: \"numeric\",\n              hour: \"numeric\",\n              minute: \"numeric\",\n              second: \"numeric\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-interactions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"interaction-button\",\n            onClick: () => handleUpvote(post._id),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: upvoteIcon,\n              alt: \"Upvote\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"interaction-count\",\n              children: post.upvotes || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"interaction-button\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: downvoteIcon,\n              alt: \"Downvote\",\n              onClick: () => handleDownvote(post._id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"interaction-count\",\n              children: post.downvotes || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"interaction-button\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: commentIcon,\n              alt: \"Comments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"interaction-count\",\n              children: post.comments ? post.comments.length : 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"interaction-button\",\n            onClick: () => handleReport(post._id),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: reportIcon,\n              alt: \"Report\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"interaction-button\",\n            onClick: () => handleShare(post._id),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: shareIcon,\n              alt: \"Share\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"interaction-button\",\n            onClick: () => handleDeleteAdmin(post._id),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: deleteIcon,\n              alt: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), reportedPostId === post._id && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"report-message\",\n          children: reportMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 15\n        }, this)]\n      }, post._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loading-post\",\n        children: \"Loading post...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Comments:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: newComment,\n          onChange: handleInputChange,\n          placeholder: \"Write your comment here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"character-limit\",\n          children: [\"Characters Remaining: \", remainingCharacters]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddComment,\n          type: \"submit\",\n          children: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), commentError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message-commentpage\",\n          children: commentError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comments-list\",\n          children: post && post.comments.map((comment // Removed index as it's no longer needed for the key\n          ) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"comment-anonymousId\",\n                children: comment.author.anonymousId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"comment-created-at\",\n                children: new Date(comment.createdAt).toLocaleString(\"en-US\", {\n                  year: \"numeric\",\n                  month: \"numeric\",\n                  day: \"numeric\",\n                  hour: \"numeric\",\n                  minute: \"numeric\",\n                  second: \"numeric\"\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: comment.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-interactions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"interaction-button\",\n                onClick: () => handleVoteUpvote(postId, comment._id),\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: upvoteIcon,\n                  alt: \"Upvote\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"interaction-count\",\n                  children: comment.upvotes || 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"interaction-button\",\n                onClick: () => handleVoteDownvote(postId, comment._id),\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: downvoteIcon,\n                  alt: \"Downvote\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"interaction-count\",\n                  children: comment.downvotes || 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 21\n            }, this)]\n          }, comment._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentPage, \"J+bnfAxwmbMvzNYD818i7J/1PcA=\", false, function () {\n  return [useParams, useNavigate, useUser];\n});\n_c = CommentPage;\nexport default CommentPage;\nvar _c;\n$RefreshReg$(_c, \"CommentPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axios","upvoteIcon","downvoteIcon","commentIcon","shareIcon","reportIcon","deleteIcon","NavBar","SideBar","useUser","jsxDEV","_jsxDEV","CommentPage","_s","postId","post","setPost","newComment","setNewComment","remainingCharacters","setRemainingCharacters","reportMessage","setReportMessage","reportedPostId","setReportedPostId","commentError","setCommentError","navigate","isAdmin","fetchPostAndComments","timer","setTimeout","clearTimeout","response","get","fetchedPost","data","authorAnonymousId","author","anonymousId","error","console","handleAddComment","trim","userEmail","localStorage","getItem","commentData","content","headers","status","Error","handleInputChange","event","value","target","trimmedValue","slice","remaining","Math","max","length","handleVoteUpvote","commentId","handleVoteDownvote","handleUpvote","handleDownvote","handleReport","action","handleDeleteAdmin","window","confirm","delete","handleShare","commentPageLink","location","origin","navigator","clipboard","writeText","then","alert","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Date","createdAt","toLocaleString","year","month","day","hour","minute","second","title","onClick","_id","src","alt","upvotes","downvotes","comments","onChange","placeholder","type","map","comment","_c","$RefreshReg$"],"sources":["C:/Users/Husei/aubify/Frontend/src/components/CommentPage/CommentPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./CommentPage.css\";\nimport upvoteIcon from \"../icons/upvote.png\";\nimport downvoteIcon from \"../icons/downvote.png\";\nimport commentIcon from \"../icons/comment.png\";\nimport shareIcon from \"../icons/share.png\";\nimport reportIcon from \"../icons/report.png\";\nimport deleteIcon from \"../icons/delete-admin.png\";\nimport NavBar from \"../NavBar/NavBar\";\nimport SideBar from \"../SideBar/SideBar\";\nimport { useUser } from \"../../UserContext\";\n\nconst CommentPage = () => {\n  const { postId } = useParams();\n  const [post, setPost] = useState(null);\n  const [newComment, setNewComment] = useState(\"\");\n  const [remainingCharacters, setRemainingCharacters] = useState(250);\n  const [reportMessage, setReportMessage] = useState(\"\");\n  const [reportedPostId, setReportedPostId] = useState(null);\n  const [commentError, setCommentError] = useState(\"\");\n  const navigate = useNavigate();\n  const { isAdmin } = useUser();\n\n  useEffect(() => {\n    fetchPostAndComments();\n  }, []);\n\n  useEffect(() => {\n    if (reportedPostId) {\n      const timer = setTimeout(() => {\n        setReportedPostId(null);\n      }, 5000);\n\n      return () => clearTimeout(timer);\n    }\n  }, [reportedPostId]);\n\n  const fetchPostAndComments = async () => {\n    try {\n      const response = await axios.get(`/posts/${postId}`);\n      const fetchedPost = {\n        ...response.data,\n        authorAnonymousId: response.data.author.anonymousId,\n      };\n      setPost(fetchedPost);\n    } catch (error) {\n      console.error(\"Failed to fetch post:\", error);\n    }\n  };\n\n  const handleAddComment = async () => {\n    if (newComment.trim() === \"\") {\n      setCommentError(\"Please enter the content for the comment.\");\n      return;\n    }\n\n    const userEmail = localStorage.getItem(\"userEmail\");\n    if (!userEmail) {\n      console.error(\n        \"User email not found. Please ensure the user is logged in.\"\n      );\n      return;\n    }\n\n    const commentData = {\n      content: newComment,\n      userEmail,\n    };\n\n    try {\n      const response = await axios.post(\n        `/posts/${postId}/comments`,\n        commentData,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      if (response.status === 201 || response.status === 200) {\n        // Ensure successful response\n        setNewComment(\"\"); // Clear the text field\n        setRemainingCharacters(250); // Reset remaining characters\n        fetchPostAndComments(); // Explicitly refetch post and comments to ensure UI is updated\n      } else {\n        throw new Error(\"Failed to add comment\");\n      }\n    } catch (error) {\n      console.error(\"Failed to add comment:\", error);\n      // Check if the error response indicates a comment limit was reached\n      if (error.response && error.response.status === 429) {\n        setCommentError(\n          \"You have reached your commenting limit for today on this post, please try again later.\"\n        );\n      }\n    }\n  };\n\n  const handleInputChange = (event) => {\n    const { value } = event.target;\n    const trimmedValue = value.slice(0, 250); // Limit the input to 250 characters\n    setNewComment(trimmedValue);\n    const remaining = Math.max(0, 250 - trimmedValue.length); // Calculate remaining characters\n    setRemainingCharacters(remaining);\n    setCommentError(\"\");\n  };\n\n  // Example function to upvote a comment based on its index within the post's comments array\n  const handleVoteUpvote = async (postId, commentId) => {\n    try {\n      await axios.post(`/posts/${postId}/comments/${commentId}/upvote`, {\n        userEmail: localStorage.getItem(\"userEmail\"),\n      });\n      fetchPostAndComments(); // Refresh to show updated vote counts\n    } catch (error) {\n      console.error(`Failed to upvote on comment:`, error);\n    }\n  };\n\n  const handleVoteDownvote = async (postId, commentId) => {\n    try {\n      await axios.post(`/posts/${postId}/comments/${commentId}/downvote`, {\n        userEmail: localStorage.getItem(\"userEmail\"),\n      });\n      fetchPostAndComments(); // Refresh to show updated vote counts\n    } catch (error) {\n      console.error(`Failed to downvote on comment:`, error);\n    }\n  };\n\n  const handleUpvote = async (postId) => {\n    const userEmail = localStorage.getItem(\"userEmail\"); // Retrieve the user's email\n    try {\n      await axios.post(`/posts/${postId}/upvote`, {\n        userEmail,\n      });\n      fetchPostAndComments(); // Refresh the posts to reflect the new upvote count\n    } catch (error) {\n      console.error(\"Failed to upvote post:\", error);\n    }\n  };\n\n  const handleDownvote = async (postId) => {\n    const userEmail = localStorage.getItem(\"userEmail\"); // Retrieve the user's email\n    try {\n      await axios.post(`/posts/${postId}/downvote`, {\n        userEmail,\n      });\n      fetchPostAndComments(); // Refresh the posts to reflect the new downvote count\n    } catch (error) {\n      console.error(\"Failed to downvote post:\", error);\n    }\n  };\n\n  const handleReport = async (postId) => {\n    try {\n      const userEmail = localStorage.getItem(\"userEmail\");\n      const response = await axios.post(`/posts/${postId}/report`, {\n        userEmail,\n      });\n      setReportedPostId(postId);\n      if (response.data.action === \"add\") {\n        setReportMessage(\"You have successfully reported this post!\");\n      } else if (response.data.action === \"remove\") {\n        setReportMessage(\"Report removed!\");\n      }\n    } catch (error) {\n      console.error(\"Failed to toggle report:\", error);\n    }\n  };\n  const handleDeleteAdmin = async (postId) => {\n    if (!window.confirm(\"Are you sure you want to delete this post?\")) return;\n\n    try {\n      await axios.delete(`/posts/${postId}`, {\n        data: { userEmail: localStorage.getItem(\"userEmail\") }, // Axios requires data to be in a 'data' key for DELETE requests\n      });\n      // Refresh the post list to reflect the deletion\n      navigate(\"/homepage\");\n    } catch (error) {\n      console.error(\"Failed to delete post:\", error);\n    }\n  };\n\n  const handleShare = (postId) => {\n    const commentPageLink = `${window.location.origin}/posts/${postId}/share`;\n    navigator.clipboard\n      .writeText(commentPageLink)\n      .then(() => alert(\"Link copied to clipboard!\"))\n      .catch((error) => console.error(\"Failed to copy link:\", error));\n  };\n\n  return (\n    <div className=\"comment-page\">\n      <NavBar />\n      <SideBar />\n      <div className=\"comment-page-container\">\n        {post ? (\n          <div key={post._id} className=\"post\">\n            <div className=\"post-details-comment\">\n              <div className=\"post-anonymousId\">{post.authorAnonymousId}</div>\n              <div className=\"post-created-at\">\n                {new Date(post.createdAt).toLocaleString(\"en-US\", {\n                  year: \"numeric\",\n                  month: \"numeric\",\n                  day: \"numeric\",\n                  hour: \"numeric\",\n                  minute: \"numeric\",\n                  second: \"numeric\",\n                })}\n              </div>\n            </div>\n            <h2>{post.title}</h2>\n            <p>{post.content}</p>\n            <div className=\"comment-interactions\">\n              <button\n                className=\"interaction-button\"\n                onClick={() => handleUpvote(post._id)}\n              >\n                <img src={upvoteIcon} alt=\"Upvote\" />\n                <span className=\"interaction-count\">{post.upvotes || 0}</span>\n              </button>\n              <button className=\"interaction-button\">\n                <img\n                  src={downvoteIcon}\n                  alt=\"Downvote\"\n                  onClick={() => handleDownvote(post._id)}\n                />\n                <span className=\"interaction-count\">{post.downvotes || 0}</span>\n              </button>\n              <button className=\"interaction-button\">\n                <img src={commentIcon} alt=\"Comments\" />\n                <span className=\"interaction-count\">\n                  {post.comments ? post.comments.length : 0}\n                </span>\n              </button>\n              <button\n                className=\"interaction-button\"\n                onClick={() => handleReport(post._id)}\n              >\n                <img src={reportIcon} alt=\"Report\" />\n              </button>\n              <button\n                className=\"interaction-button\"\n                onClick={() => handleShare(post._id)}\n              >\n                <img src={shareIcon} alt=\"Share\" />\n              </button>\n              {isAdmin && (\n                <button\n                  className=\"interaction-button\"\n                  onClick={() => handleDeleteAdmin(post._id)}\n                >\n                  <img src={deleteIcon} alt=\"Delete\" />\n                </button>\n              )}\n            </div>\n            {reportedPostId === post._id && (\n              <div className=\"report-message\">{reportMessage}</div>\n            )}\n          </div>\n        ) : (\n          <p className=\"loading-post\">Loading post...</p>\n        )}\n        <div className=\"add-comment\">\n          <h1>Comments:</h1>\n          <textarea\n            value={newComment}\n            onChange={handleInputChange}\n            placeholder=\"Write your comment here...\"\n          />\n          <div className=\"character-limit\">\n            Characters Remaining: {remainingCharacters}\n          </div>\n          <button onClick={handleAddComment} type=\"submit\">\n            Comment\n          </button>\n          {commentError && (\n            <div className=\"error-message-commentpage\">{commentError}</div>\n          )}\n        </div>\n        <div className=\"comments-container\">\n          <div className=\"comments-list\">\n            {post &&\n              post.comments.map(\n                (\n                  comment // Removed index as it's no longer needed for the key\n                ) => (\n                  <div key={comment._id} className=\"comment\">\n                    {\" \"}\n                    {/* Use comment._id for a unique key */}\n                    <div className=\"comment-details\">\n                      <div className=\"comment-anonymousId\">\n                        {comment.author.anonymousId}\n                      </div>\n                      <div className=\"comment-created-at\">\n                        {new Date(comment.createdAt).toLocaleString(\"en-US\", {\n                          year: \"numeric\",\n                          month: \"numeric\",\n                          day: \"numeric\",\n                          hour: \"numeric\",\n                          minute: \"numeric\",\n                          second: \"numeric\",\n                        })}\n                      </div>\n                    </div>\n                    <p>{comment.content}</p>\n                    <div className=\"comment-interactions\">\n                      <button\n                        className=\"interaction-button\"\n                        onClick={() => handleVoteUpvote(postId, comment._id)}\n                      >\n                        <img src={upvoteIcon} alt=\"Upvote\" />\n                        <span className=\"interaction-count\">\n                          {comment.upvotes || 0}\n                        </span>\n                      </button>\n                      <button\n                        className=\"interaction-button\"\n                        onClick={() => handleVoteDownvote(postId, comment._id)}\n                      >\n                        <img src={downvoteIcon} alt=\"Downvote\" />\n                        <span className=\"interaction-count\">\n                          {comment.downvotes || 0}\n                        </span>\n                      </button>\n                    </div>\n                  </div>\n                )\n              )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CommentPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}