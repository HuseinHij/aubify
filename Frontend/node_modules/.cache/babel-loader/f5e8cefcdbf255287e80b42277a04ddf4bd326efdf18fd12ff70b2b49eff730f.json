{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Husei\\\\aubify\\\\Frontend\\\\src\\\\components\\\\HomePage\\\\HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./HomePage.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport upvoteIcon from \"../icons/upvote.png\"; // Add your icons in the public/assets/icons/ directory\nimport downvoteIcon from \"../icons/downvote.png\";\nimport commentIcon from \"../icons/comment.png\";\nimport shareIcon from \"../icons/share.png\";\nimport reportIcon from \"../icons/report.png\";\nimport deleteIcon from \"../icons/delete-admin.png\";\nimport NavBar from \"../NavBar/NavBar\";\nimport SideBar from \"../SideBar/SideBar\";\nimport { useUser } from \"../../UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [currentFilter, setCurrentFilter] = useState(\"\");\n  const [searchedPosts, setSearchedPosts] = useState([]);\n  const [reportMessage, setReportMessage] = useState(\"\");\n  const [reportedPostId, setReportedPostId] = useState(null);\n  const navigate = useNavigate();\n  const {\n    isAdmin\n  } = useUser();\n  useEffect(() => {\n    const savedFilter = localStorage.getItem(\"selectedFilter\") || \"relevance\";\n    setCurrentFilter(savedFilter);\n    fetchPostsFiltered(savedFilter);\n  }, [searchTerm]);\n  useEffect(() => {\n    const handleSearch = searchTerm => {\n      // Filter posts based on the search term\n      const filtered = posts.filter(post => post.title.toLowerCase().includes(searchTerm.toLowerCase()));\n      setSearchedPosts(filtered); // Update the filtered posts state\n    };\n    handleSearch(searchTerm);\n  }, [searchTerm, posts]);\n  useEffect(() => {\n    if (reportedPostId) {\n      const timer = setTimeout(() => {\n        setReportedPostId(null);\n      }, 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [reportedPostId]);\n  const handleUpvote = async postId => {\n    const userEmail = localStorage.getItem(\"userEmail\");\n    try {\n      await axios.post(`/posts/${postId}/upvote`, {\n        userEmail\n      });\n      fetchPostsFiltered(currentFilter); // Use currentFilter instead of savedFilter\n    } catch (error) {\n      console.error(\"Failed to upvote post:\", error);\n    }\n  };\n  const handleDownvote = async postId => {\n    const userEmail = localStorage.getItem(\"userEmail\"); // Retrieve the user's email\n    try {\n      await axios.post(`/posts/${postId}/downvote`, {\n        userEmail\n      });\n      fetchPostsFiltered(currentFilter); // Use currentFilter instead of savedFilter\n    } catch (error) {\n      console.error(\"Failed to downvote post:\", error);\n    }\n  };\n  const handleCommentClick = postId => {\n    navigate(`/posts/${postId}/comments`);\n  };\n  const fetchPostsFiltered = async filter => {\n    try {\n      const response = await axios.get(`/posts?filter=${filter}`);\n      const postsWithDetails = await Promise.all(response.data.map(async post => {\n        try {\n          // Fetch the anonymousId for each post's author\n          const res = await axios.get(`/posts/${post._id}/author/anonymousId`);\n          return {\n            ...post,\n            authorAnonymousId: res.data.anonymousId\n          };\n        } catch (error) {\n          console.error(\"Failed to fetch author anonymous ID for post:\", post._id, error);\n          return {\n            ...post,\n            authorAnonymousId: \"Error fetching ID\"\n          }; // Or handle this case as needed\n        }\n      }));\n      setPosts(postsWithDetails);\n    } catch (error) {\n      console.error(\"Failed to fetch posts:\", error);\n    }\n  };\n  const handleFilterChange = event => {\n    const selectedFilter = event.target.value;\n    setCurrentFilter(selectedFilter);\n    localStorage.setItem(\"selectedFilter\", selectedFilter);\n    fetchPostsFiltered(selectedFilter);\n  };\n  const handleSearch = searchTerm => {\n    // If search term is empty, display all posts\n    if (!searchTerm.trim()) {\n      setSearchedPosts(posts);\n    } else {\n      // Filter posts based on the search term\n      const filtered = posts.filter(post => post.title.toLowerCase().includes(searchTerm.toLowerCase()));\n      setSearchedPosts(filtered); // Update the filtered posts state\n    }\n  };\n  const handleReport = async postId => {\n    try {\n      const userEmail = localStorage.getItem(\"userEmail\");\n      const response = await axios.post(`/posts/${postId}/report`, {\n        userEmail\n      });\n      setReportedPostId(postId);\n      if (response.data.action === \"add\") {\n        setReportMessage(\"You have successfully reported this post!\");\n      } else if (response.data.action === \"remove\") {\n        setReportMessage(\"Report removed!\");\n      }\n    } catch (error) {\n      console.error(\"Failed to toggle report:\", error);\n    }\n  };\n  const handleDeleteAdmin = async postId => {\n    if (!window.confirm(\"Are you sure you want to delete this post?\")) return;\n    try {\n      await axios.delete(`/posts/${postId}`, {\n        data: {\n          userEmail: localStorage.getItem(\"userEmail\")\n        } // Axios requires data to be in a 'data' key for DELETE requests\n      });\n      // Refresh the post list to reflect the deletion\n      fetchPostsFiltered(currentFilter);\n    } catch (error) {\n      console.error(\"Failed to delete post:\", error);\n    }\n  };\n  const handleShare = postId => {\n    const commentPageLink = `${window.location.origin}/posts/${postId}/share`;\n    navigator.clipboard.writeText(commentPageLink).then(() => alert(\"Link copied to clipboard!\")).catch(error => console.error(\"Failed to copy link:\", error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-page\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"filter\",\n          children: \"Filter by:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: currentFilter,\n          onChange: handleFilterChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"relevance\",\n            children: \"Relevance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"date_added\",\n            children: \"Most Recent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), searchedPosts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-details-home\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-anonymousId\",\n            children: post.authorAnonymousId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-created-at\",\n            children: new Date(post.createdAt).toLocaleString(\"en-US\", {\n              year: \"numeric\",\n              month: \"numeric\",\n              day: \"numeric\",\n              hour: \"numeric\",\n              minute: \"numeric\",\n              second: \"numeric\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-interactions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"interaction-button\",\n            onClick: () => handleUpvote(post._id),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: upvoteIcon,\n              alt: \"Upvote\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"interaction-count\",\n              children: post.upvotes || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"interaction-button\",\n            onClick: () => handleDownvote(post._id),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: downvoteIcon,\n              alt: \"Downvote\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"interaction-count\",\n              children: post.downvotes || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"interaction-button\",\n            onClick: () => handleCommentClick(post._id),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: commentIcon,\n              alt: \"Comments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"interaction-count\",\n              children: (post.comments || []).length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"interaction-button\",\n            onClick: () => handleReport(post._id),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: reportIcon,\n              alt: \"Report\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"interaction-button\",\n            onClick: () => handleShare(post._id),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: shareIcon,\n              alt: \"Share\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"interaction-button\",\n            onClick: () => handleDeleteAdmin(post._id),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: deleteIcon,\n              alt: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), reportedPostId === post._id && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"report-message\",\n          children: reportMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 15\n        }, this)]\n      }, post._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"5GzFD1e8yJSuyiIjLovenr8+BNg=\", false, function () {\n  return [useNavigate, useUser];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","upvoteIcon","downvoteIcon","commentIcon","shareIcon","reportIcon","deleteIcon","NavBar","SideBar","useUser","jsxDEV","_jsxDEV","HomePage","_s","posts","setPosts","searchTerm","setSearchTerm","currentFilter","setCurrentFilter","searchedPosts","setSearchedPosts","reportMessage","setReportMessage","reportedPostId","setReportedPostId","navigate","isAdmin","savedFilter","localStorage","getItem","fetchPostsFiltered","handleSearch","filtered","filter","post","title","toLowerCase","includes","timer","setTimeout","clearTimeout","handleUpvote","postId","userEmail","error","console","handleDownvote","handleCommentClick","response","get","postsWithDetails","Promise","all","data","map","res","_id","authorAnonymousId","anonymousId","handleFilterChange","event","selectedFilter","target","value","setItem","trim","handleReport","action","handleDeleteAdmin","window","confirm","delete","handleShare","commentPageLink","location","origin","navigator","clipboard","writeText","then","alert","catch","className","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onChange","Date","createdAt","toLocaleString","year","month","day","hour","minute","second","content","onClick","src","alt","upvotes","downvotes","comments","length","_c","$RefreshReg$"],"sources":["C:/Users/Husei/aubify/Frontend/src/components/HomePage/HomePage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./HomePage.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport upvoteIcon from \"../icons/upvote.png\"; // Add your icons in the public/assets/icons/ directory\nimport downvoteIcon from \"../icons/downvote.png\";\nimport commentIcon from \"../icons/comment.png\";\nimport shareIcon from \"../icons/share.png\";\nimport reportIcon from \"../icons/report.png\";\nimport deleteIcon from \"../icons/delete-admin.png\";\nimport NavBar from \"../NavBar/NavBar\";\nimport SideBar from \"../SideBar/SideBar\";\nimport { useUser } from \"../../UserContext\";\n\nconst HomePage = () => {\n  const [posts, setPosts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [currentFilter, setCurrentFilter] = useState(\"\");\n  const [searchedPosts, setSearchedPosts] = useState([]);\n  const [reportMessage, setReportMessage] = useState(\"\");\n  const [reportedPostId, setReportedPostId] = useState(null);\n  const navigate = useNavigate();\n  const { isAdmin } = useUser();\n\n  useEffect(() => {\n    const savedFilter = localStorage.getItem(\"selectedFilter\") || \"relevance\";\n    setCurrentFilter(savedFilter);\n    fetchPostsFiltered(savedFilter);\n  }, [searchTerm]);\n\n  useEffect(() => {\n    const handleSearch = (searchTerm) => {\n      // Filter posts based on the search term\n      const filtered = posts.filter((post) =>\n        post.title.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n      setSearchedPosts(filtered); // Update the filtered posts state\n    };\n\n    handleSearch(searchTerm);\n  }, [searchTerm, posts]);\n\n  useEffect(() => {\n    if (reportedPostId) {\n      const timer = setTimeout(() => {\n        setReportedPostId(null);\n      }, 5000);\n\n      return () => clearTimeout(timer);\n    }\n  }, [reportedPostId]);\n\n  const handleUpvote = async (postId) => {\n    const userEmail = localStorage.getItem(\"userEmail\");\n    try {\n      await axios.post(`/posts/${postId}/upvote`, {\n        userEmail,\n      });\n      fetchPostsFiltered(currentFilter); // Use currentFilter instead of savedFilter\n    } catch (error) {\n      console.error(\"Failed to upvote post:\", error);\n    }\n  };\n\n  const handleDownvote = async (postId) => {\n    const userEmail = localStorage.getItem(\"userEmail\"); // Retrieve the user's email\n    try {\n      await axios.post(`/posts/${postId}/downvote`, {\n        userEmail,\n      });\n      fetchPostsFiltered(currentFilter); // Use currentFilter instead of savedFilter\n    } catch (error) {\n      console.error(\"Failed to downvote post:\", error);\n    }\n  };\n\n  const handleCommentClick = (postId) => {\n    navigate(`/posts/${postId}/comments`);\n  };\n\n  const fetchPostsFiltered = async (filter) => {\n    try {\n      const response = await axios.get(`/posts?filter=${filter}`);\n      const postsWithDetails = await Promise.all(\n        response.data.map(async (post) => {\n          try {\n            // Fetch the anonymousId for each post's author\n            const res = await axios.get(\n              `/posts/${post._id}/author/anonymousId`\n            );\n            return { ...post, authorAnonymousId: res.data.anonymousId };\n          } catch (error) {\n            console.error(\n              \"Failed to fetch author anonymous ID for post:\",\n              post._id,\n              error\n            );\n            return { ...post, authorAnonymousId: \"Error fetching ID\" }; // Or handle this case as needed\n          }\n        })\n      );\n      setPosts(postsWithDetails);\n    } catch (error) {\n      console.error(\"Failed to fetch posts:\", error);\n    }\n  };\n\n  const handleFilterChange = (event) => {\n    const selectedFilter = event.target.value;\n    setCurrentFilter(selectedFilter);\n    localStorage.setItem(\"selectedFilter\", selectedFilter);\n    fetchPostsFiltered(selectedFilter);\n  };\n\n  const handleSearch = (searchTerm) => {\n    // If search term is empty, display all posts\n    if (!searchTerm.trim()) {\n      setSearchedPosts(posts);\n    } else {\n      // Filter posts based on the search term\n      const filtered = posts.filter((post) =>\n        post.title.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n      setSearchedPosts(filtered); // Update the filtered posts state\n    }\n  };\n\n  const handleReport = async (postId) => {\n    try {\n      const userEmail = localStorage.getItem(\"userEmail\");\n      const response = await axios.post(`/posts/${postId}/report`, {\n        userEmail,\n      });\n      setReportedPostId(postId);\n      if (response.data.action === \"add\") {\n        setReportMessage(\"You have successfully reported this post!\");\n      } else if (response.data.action === \"remove\") {\n        setReportMessage(\"Report removed!\");\n      }\n    } catch (error) {\n      console.error(\"Failed to toggle report:\", error);\n    }\n  };\n\n  const handleDeleteAdmin = async (postId) => {\n    if (!window.confirm(\"Are you sure you want to delete this post?\")) return;\n\n    try {\n      await axios.delete(`/posts/${postId}`, {\n        data: { userEmail: localStorage.getItem(\"userEmail\") }, // Axios requires data to be in a 'data' key for DELETE requests\n      });\n      // Refresh the post list to reflect the deletion\n      fetchPostsFiltered(currentFilter);\n    } catch (error) {\n      console.error(\"Failed to delete post:\", error);\n    }\n  };\n\n  const handleShare = (postId) => {\n    const commentPageLink = `${window.location.origin}/posts/${postId}/share`;\n    navigator.clipboard\n      .writeText(commentPageLink)\n      .then(() => alert(\"Link copied to clipboard!\"))\n      .catch((error) => console.error(\"Failed to copy link:\", error));\n  };\n\n  return (\n    <div className=\"home-page\">\n      <NavBar onSearch={handleSearch} />\n      <SideBar />\n      <div className=\"post-list\">\n        <div className=\"filter-container\">\n          <label htmlFor=\"filter\">Filter by:</label>\n          <select value={currentFilter} onChange={handleFilterChange}>\n            <option value=\"relevance\">Relevance</option>\n            <option value=\"date_added\">Most Recent</option>\n          </select>\n        </div>\n        {searchedPosts.map((post) => (\n          <div key={post._id} className=\"post\">\n            <div className=\"post-details-home\">\n              <div className=\"post-anonymousId\">{post.authorAnonymousId}</div>\n              <div className=\"post-created-at\">\n                {new Date(post.createdAt).toLocaleString(\"en-US\", {\n                  year: \"numeric\",\n                  month: \"numeric\",\n                  day: \"numeric\",\n                  hour: \"numeric\",\n                  minute: \"numeric\",\n                  second: \"numeric\",\n                })}\n              </div>\n            </div>\n            <h2>{post.title}</h2>\n            <p>{post.content}</p>\n            <div className=\"post-interactions\">\n              {/* Interaction buttons */}\n              <button\n                className=\"interaction-button\"\n                onClick={() => handleUpvote(post._id)}\n              >\n                <img src={upvoteIcon} alt=\"Upvote\" />\n                <span className=\"interaction-count\">{post.upvotes || 0}</span>\n              </button>\n              <button\n                className=\"interaction-button\"\n                onClick={() => handleDownvote(post._id)}\n              >\n                <img src={downvoteIcon} alt=\"Downvote\" />\n                <span className=\"interaction-count\">{post.downvotes || 0}</span>\n              </button>\n              <button\n                className=\"interaction-button\"\n                onClick={() => handleCommentClick(post._id)}\n              >\n                <img src={commentIcon} alt=\"Comments\" />\n                <span className=\"interaction-count\">\n                  {(post.comments || []).length}\n                </span>\n              </button>\n              <button\n                className=\"interaction-button\"\n                onClick={() => handleReport(post._id)}\n              >\n                <img src={reportIcon} alt=\"Report\" />\n              </button>\n              <button\n                className=\"interaction-button\"\n                onClick={() => handleShare(post._id)}\n              >\n                <img src={shareIcon} alt=\"Share\" />\n              </button>\n              {isAdmin && (\n                <button\n                  className=\"interaction-button\"\n                  onClick={() => handleDeleteAdmin(post._id)}\n                >\n                  <img src={deleteIcon} alt=\"Delete\" />\n                </button>\n              )}\n            </div>\n            {reportedPostId === post._id && (\n              <div className=\"report-message\">{reportMessage}</div>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default HomePage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AACvB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,UAAU,MAAM,qBAAqB,CAAC,CAAC;AAC9C,OAAOC,YAAY,MAAM,uBAAuB;AAChD,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,OAAOC,UAAU,MAAM,2BAA2B;AAClD,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,OAAO,MAAM,oBAAoB;AACxC,SAASC,OAAO,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACoB,aAAa,EAAEC,gBAAgB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACsB,aAAa,EAAEC,gBAAgB,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACwB,aAAa,EAAEC,gBAAgB,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC0B,cAAc,EAAEC,iBAAiB,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM4B,QAAQ,GAAG1B,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAE2B;EAAQ,CAAC,GAAGlB,OAAO,CAAC,CAAC;EAE7BZ,SAAS,CAAC,MAAM;IACd,MAAM+B,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC,IAAI,WAAW;IACzEX,gBAAgB,CAACS,WAAW,CAAC;IAC7BG,kBAAkB,CAACH,WAAW,CAAC;EACjC,CAAC,EAAE,CAACZ,UAAU,CAAC,CAAC;EAEhBnB,SAAS,CAAC,MAAM;IACd,MAAMmC,YAAY,GAAIhB,UAAU,IAAK;MACnC;MACA,MAAMiB,QAAQ,GAAGnB,KAAK,CAACoB,MAAM,CAAEC,IAAI,IACjCA,IAAI,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACtB,UAAU,CAACqB,WAAW,CAAC,CAAC,CAC5D,CAAC;MACDhB,gBAAgB,CAACY,QAAQ,CAAC,CAAC,CAAC;IAC9B,CAAC;IAEDD,YAAY,CAAChB,UAAU,CAAC;EAC1B,CAAC,EAAE,CAACA,UAAU,EAAEF,KAAK,CAAC,CAAC;EAEvBjB,SAAS,CAAC,MAAM;IACd,IAAI2B,cAAc,EAAE;MAClB,MAAMe,KAAK,GAAGC,UAAU,CAAC,MAAM;QAC7Bf,iBAAiB,CAAC,IAAI,CAAC;MACzB,CAAC,EAAE,IAAI,CAAC;MAER,OAAO,MAAMgB,YAAY,CAACF,KAAK,CAAC;IAClC;EACF,CAAC,EAAE,CAACf,cAAc,CAAC,CAAC;EAEpB,MAAMkB,YAAY,GAAG,MAAOC,MAAM,IAAK;IACrC,MAAMC,SAAS,GAAGf,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACnD,IAAI;MACF,MAAM/B,KAAK,CAACoC,IAAI,CAAE,UAASQ,MAAO,SAAQ,EAAE;QAC1CC;MACF,CAAC,CAAC;MACFb,kBAAkB,CAACb,aAAa,CAAC,CAAC,CAAC;IACrC,CAAC,CAAC,OAAO2B,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,MAAME,cAAc,GAAG,MAAOJ,MAAM,IAAK;IACvC,MAAMC,SAAS,GAAGf,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;IACrD,IAAI;MACF,MAAM/B,KAAK,CAACoC,IAAI,CAAE,UAASQ,MAAO,WAAU,EAAE;QAC5CC;MACF,CAAC,CAAC;MACFb,kBAAkB,CAACb,aAAa,CAAC,CAAC,CAAC;IACrC,CAAC,CAAC,OAAO2B,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,MAAMG,kBAAkB,GAAIL,MAAM,IAAK;IACrCjB,QAAQ,CAAE,UAASiB,MAAO,WAAU,CAAC;EACvC,CAAC;EAED,MAAMZ,kBAAkB,GAAG,MAAOG,MAAM,IAAK;IAC3C,IAAI;MACF,MAAMe,QAAQ,GAAG,MAAMlD,KAAK,CAACmD,GAAG,CAAE,iBAAgBhB,MAAO,EAAC,CAAC;MAC3D,MAAMiB,gBAAgB,GAAG,MAAMC,OAAO,CAACC,GAAG,CACxCJ,QAAQ,CAACK,IAAI,CAACC,GAAG,CAAC,MAAOpB,IAAI,IAAK;QAChC,IAAI;UACF;UACA,MAAMqB,GAAG,GAAG,MAAMzD,KAAK,CAACmD,GAAG,CACxB,UAASf,IAAI,CAACsB,GAAI,qBACrB,CAAC;UACD,OAAO;YAAE,GAAGtB,IAAI;YAAEuB,iBAAiB,EAAEF,GAAG,CAACF,IAAI,CAACK;UAAY,CAAC;QAC7D,CAAC,CAAC,OAAOd,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CACX,+CAA+C,EAC/CV,IAAI,CAACsB,GAAG,EACRZ,KACF,CAAC;UACD,OAAO;YAAE,GAAGV,IAAI;YAAEuB,iBAAiB,EAAE;UAAoB,CAAC,CAAC,CAAC;QAC9D;MACF,CAAC,CACH,CAAC;MACD3C,QAAQ,CAACoC,gBAAgB,CAAC;IAC5B,CAAC,CAAC,OAAON,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,MAAMe,kBAAkB,GAAIC,KAAK,IAAK;IACpC,MAAMC,cAAc,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACzC7C,gBAAgB,CAAC2C,cAAc,CAAC;IAChCjC,YAAY,CAACoC,OAAO,CAAC,gBAAgB,EAAEH,cAAc,CAAC;IACtD/B,kBAAkB,CAAC+B,cAAc,CAAC;EACpC,CAAC;EAED,MAAM9B,YAAY,GAAIhB,UAAU,IAAK;IACnC;IACA,IAAI,CAACA,UAAU,CAACkD,IAAI,CAAC,CAAC,EAAE;MACtB7C,gBAAgB,CAACP,KAAK,CAAC;IACzB,CAAC,MAAM;MACL;MACA,MAAMmB,QAAQ,GAAGnB,KAAK,CAACoB,MAAM,CAAEC,IAAI,IACjCA,IAAI,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACtB,UAAU,CAACqB,WAAW,CAAC,CAAC,CAC5D,CAAC;MACDhB,gBAAgB,CAACY,QAAQ,CAAC,CAAC,CAAC;IAC9B;EACF,CAAC;EAED,MAAMkC,YAAY,GAAG,MAAOxB,MAAM,IAAK;IACrC,IAAI;MACF,MAAMC,SAAS,GAAGf,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MACnD,MAAMmB,QAAQ,GAAG,MAAMlD,KAAK,CAACoC,IAAI,CAAE,UAASQ,MAAO,SAAQ,EAAE;QAC3DC;MACF,CAAC,CAAC;MACFnB,iBAAiB,CAACkB,MAAM,CAAC;MACzB,IAAIM,QAAQ,CAACK,IAAI,CAACc,MAAM,KAAK,KAAK,EAAE;QAClC7C,gBAAgB,CAAC,2CAA2C,CAAC;MAC/D,CAAC,MAAM,IAAI0B,QAAQ,CAACK,IAAI,CAACc,MAAM,KAAK,QAAQ,EAAE;QAC5C7C,gBAAgB,CAAC,iBAAiB,CAAC;MACrC;IACF,CAAC,CAAC,OAAOsB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,MAAMwB,iBAAiB,GAAG,MAAO1B,MAAM,IAAK;IAC1C,IAAI,CAAC2B,MAAM,CAACC,OAAO,CAAC,4CAA4C,CAAC,EAAE;IAEnE,IAAI;MACF,MAAMxE,KAAK,CAACyE,MAAM,CAAE,UAAS7B,MAAO,EAAC,EAAE;QACrCW,IAAI,EAAE;UAAEV,SAAS,EAAEf,YAAY,CAACC,OAAO,CAAC,WAAW;QAAE,CAAC,CAAE;MAC1D,CAAC,CAAC;MACF;MACAC,kBAAkB,CAACb,aAAa,CAAC;IACnC,CAAC,CAAC,OAAO2B,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,MAAM4B,WAAW,GAAI9B,MAAM,IAAK;IAC9B,MAAM+B,eAAe,GAAI,GAAEJ,MAAM,CAACK,QAAQ,CAACC,MAAO,UAASjC,MAAO,QAAO;IACzEkC,SAAS,CAACC,SAAS,CAChBC,SAAS,CAACL,eAAe,CAAC,CAC1BM,IAAI,CAAC,MAAMC,KAAK,CAAC,2BAA2B,CAAC,CAAC,CAC9CC,KAAK,CAAErC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACnE,CAAC;EAED,oBACElC,OAAA;IAAKwE,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBzE,OAAA,CAACJ,MAAM;MAAC8E,QAAQ,EAAErD;IAAa;MAAAsD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClC9E,OAAA,CAACH,OAAO;MAAA8E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACX9E,OAAA;MAAKwE,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBzE,OAAA;QAAKwE,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/BzE,OAAA;UAAO+E,OAAO,EAAC,QAAQ;UAAAN,QAAA,EAAC;QAAU;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC1C9E,OAAA;UAAQqD,KAAK,EAAE9C,aAAc;UAACyE,QAAQ,EAAE/B,kBAAmB;UAAAwB,QAAA,gBACzDzE,OAAA;YAAQqD,KAAK,EAAC,WAAW;YAAAoB,QAAA,EAAC;UAAS;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC5C9E,OAAA;YAAQqD,KAAK,EAAC,YAAY;YAAAoB,QAAA,EAAC;UAAW;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EACLrE,aAAa,CAACmC,GAAG,CAAEpB,IAAI,iBACtBxB,OAAA;QAAoBwE,SAAS,EAAC,MAAM;QAAAC,QAAA,gBAClCzE,OAAA;UAAKwE,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAChCzE,OAAA;YAAKwE,SAAS,EAAC,kBAAkB;YAAAC,QAAA,EAAEjD,IAAI,CAACuB;UAAiB;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAChE9E,OAAA;YAAKwE,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAC7B,IAAIQ,IAAI,CAACzD,IAAI,CAAC0D,SAAS,CAAC,CAACC,cAAc,CAAC,OAAO,EAAE;cAChDC,IAAI,EAAE,SAAS;cACfC,KAAK,EAAE,SAAS;cAChBC,GAAG,EAAE,SAAS;cACdC,IAAI,EAAE,SAAS;cACfC,MAAM,EAAE,SAAS;cACjBC,MAAM,EAAE;YACV,CAAC;UAAC;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACN9E,OAAA;UAAAyE,QAAA,EAAKjD,IAAI,CAACC;QAAK;UAAAkD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrB9E,OAAA;UAAAyE,QAAA,EAAIjD,IAAI,CAACkE;QAAO;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrB9E,OAAA;UAAKwE,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAEhCzE,OAAA;YACEwE,SAAS,EAAC,oBAAoB;YAC9BmB,OAAO,EAAEA,CAAA,KAAM5D,YAAY,CAACP,IAAI,CAACsB,GAAG,CAAE;YAAA2B,QAAA,gBAEtCzE,OAAA;cAAK4F,GAAG,EAAEtG,UAAW;cAACuG,GAAG,EAAC;YAAQ;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACrC9E,OAAA;cAAMwE,SAAS,EAAC,mBAAmB;cAAAC,QAAA,EAAEjD,IAAI,CAACsE,OAAO,IAAI;YAAC;cAAAnB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxD,CAAC,eACT9E,OAAA;YACEwE,SAAS,EAAC,oBAAoB;YAC9BmB,OAAO,EAAEA,CAAA,KAAMvD,cAAc,CAACZ,IAAI,CAACsB,GAAG,CAAE;YAAA2B,QAAA,gBAExCzE,OAAA;cAAK4F,GAAG,EAAErG,YAAa;cAACsG,GAAG,EAAC;YAAU;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACzC9E,OAAA;cAAMwE,SAAS,EAAC,mBAAmB;cAAAC,QAAA,EAAEjD,IAAI,CAACuE,SAAS,IAAI;YAAC;cAAApB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1D,CAAC,eACT9E,OAAA;YACEwE,SAAS,EAAC,oBAAoB;YAC9BmB,OAAO,EAAEA,CAAA,KAAMtD,kBAAkB,CAACb,IAAI,CAACsB,GAAG,CAAE;YAAA2B,QAAA,gBAE5CzE,OAAA;cAAK4F,GAAG,EAAEpG,WAAY;cAACqG,GAAG,EAAC;YAAU;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACxC9E,OAAA;cAAMwE,SAAS,EAAC,mBAAmB;cAAAC,QAAA,EAChC,CAACjD,IAAI,CAACwE,QAAQ,IAAI,EAAE,EAAEC;YAAM;cAAAtB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eACT9E,OAAA;YACEwE,SAAS,EAAC,oBAAoB;YAC9BmB,OAAO,EAAEA,CAAA,KAAMnC,YAAY,CAAChC,IAAI,CAACsB,GAAG,CAAE;YAAA2B,QAAA,eAEtCzE,OAAA;cAAK4F,GAAG,EAAElG,UAAW;cAACmG,GAAG,EAAC;YAAQ;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CAAC,eACT9E,OAAA;YACEwE,SAAS,EAAC,oBAAoB;YAC9BmB,OAAO,EAAEA,CAAA,KAAM7B,WAAW,CAACtC,IAAI,CAACsB,GAAG,CAAE;YAAA2B,QAAA,eAErCzE,OAAA;cAAK4F,GAAG,EAAEnG,SAAU;cAACoG,GAAG,EAAC;YAAO;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC,EACR9D,OAAO,iBACNhB,OAAA;YACEwE,SAAS,EAAC,oBAAoB;YAC9BmB,OAAO,EAAEA,CAAA,KAAMjC,iBAAiB,CAAClC,IAAI,CAACsB,GAAG,CAAE;YAAA2B,QAAA,eAE3CzE,OAAA;cAAK4F,GAAG,EAAEjG,UAAW;cAACkG,GAAG,EAAC;YAAQ;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CACT;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,EACLjE,cAAc,KAAKW,IAAI,CAACsB,GAAG,iBAC1B9C,OAAA;UAAKwE,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAAE9D;QAAa;UAAAgE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CACrD;MAAA,GAhEOtD,IAAI,CAACsB,GAAG;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAiEb,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5E,EAAA,CA3OID,QAAQ;EAAA,QAOKZ,WAAW,EACRS,OAAO;AAAA;AAAAoG,EAAA,GARvBjG,QAAQ;AA4Od,eAAeA,QAAQ;AAAC,IAAAiG,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}