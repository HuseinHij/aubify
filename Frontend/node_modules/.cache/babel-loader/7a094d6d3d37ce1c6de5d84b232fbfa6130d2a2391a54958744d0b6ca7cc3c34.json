{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Husei\\\\aubify\\\\Frontend\\\\src\\\\components\\\\EmailVerification\\\\EmailVerification.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./EmailVerification.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmailVerification() {\n  _s();\n  const [verificationCode, setVerificationCode] = useState(\"\");\n  const [verificationError, setVerificationError] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Reset any previous error messages\n    setVerificationError(\"\");\n    try {\n      // Make a request to your backend to verify the code\n      const response = await axios.post(\"/verifyEmail\", {\n        verificationCode\n      });\n      if (response.status !== 200) {\n        throw new Error(\"Verification failed\");\n      }\n\n      // If verification is successful, you can redirect the user to a success page\n      window.location.href = \"/verification_success\";\n    } catch (error) {\n      console.error(\"Error verifying email:\", error);\n      setVerificationError(\"Verification failed. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ev-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"verification-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"verification-title\",\n        children: \"Email Verification\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"verification-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"verificationCode\",\n          className: \"verification-label\",\n          children: \"Enter the verification code sent to your email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"verificationCode\",\n          value: verificationCode,\n          onChange: e => setVerificationCode(e.target.value),\n          required: true,\n          className: \"verification-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"verification-button\",\n          children: \"Verify Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), verificationError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"verification-error\",\n        children: verificationError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(EmailVerification, \"hFr4sZU6Pbym/hcoj6kSUH6tFI8=\");\n_c = EmailVerification;\nexport default EmailVerification;\nvar _c;\n$RefreshReg$(_c, \"EmailVerification\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","EmailVerification","_s","verificationCode","setVerificationCode","verificationError","setVerificationError","handleSubmit","e","preventDefault","response","post","status","Error","window","location","href","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Husei/aubify/Frontend/src/components/EmailVerification/EmailVerification.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./EmailVerification.css\";\nimport axios from \"axios\";\n\nfunction EmailVerification() {\n  const [verificationCode, setVerificationCode] = useState(\"\");\n  const [verificationError, setVerificationError] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Reset any previous error messages\n    setVerificationError(\"\");\n\n    try {\n      // Make a request to your backend to verify the code\n      const response = await axios.post(\"/verifyEmail\", { verificationCode });\n\n      if (response.status !== 200) {\n        throw new Error(\"Verification failed\");\n      }\n\n      // If verification is successful, you can redirect the user to a success page\n      window.location.href = \"/verification_success\";\n    } catch (error) {\n      console.error(\"Error verifying email:\", error);\n      setVerificationError(\"Verification failed. Please try again.\");\n    }\n  };\n\n  return (\n    <div className=\"ev-wrapper\">\n      <div className=\"verification-container\">\n        <h1 className=\"verification-title\">Email Verification</h1>\n        <form onSubmit={handleSubmit} className=\"verification-form\">\n          <label htmlFor=\"verificationCode\" className=\"verification-label\">\n            Enter the verification code sent to your email:\n          </label>\n          <input\n            type=\"text\"\n            id=\"verificationCode\"\n            value={verificationCode}\n            onChange={(e) => setVerificationCode(e.target.value)}\n            required\n            className=\"verification-input\"\n          />\n          <button type=\"submit\" className=\"verification-button\">\n            Verify Email\n          </button>\n        </form>\n        {verificationError && (\n          <p className=\"verification-error\">{verificationError}</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default EmailVerification;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}